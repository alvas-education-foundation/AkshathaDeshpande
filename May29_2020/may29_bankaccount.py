# -*- coding: utf-8 -*-
"""may29_bankaccount

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sxase5LBjX2_Cihh6UGSvGNz8Svy4_Ms
"""

#BANK ACCOUNT USING OOP

class Account:
    def __init__(self,filepath):
        self.filepath=filepath#instant variable

        with open(filepath,'r') as file:
            self.balance=int(file.read())
    def withdraw(self,amount):
        self.balance=self.balance-amount
    def deposit(self,amount):
        self.balance=self.balance+amount
    def commit(self):
        with open(self.filepath,'w') as file:
            file.write(str(self.balance))
        
account=Account("/balance.txt")
print("Current Balance:",account.balance)
account.withdraw(1000)
print("After Withdraw:",account.balance)
account.deposit(5000)
print("After Deposit:",account.balance)

#BANK ACCOUNT USING INHERITANCE


class Account:
    def __init__(self,filepath):
        self.filepath=filepath#instant variable

        with open(filepath,'r') as file:
            self.balance=int(file.read())
    def withdraw(self,amount):
        self.balance=self.balance-amount
    def deposit(self,amount):
        self.balance=self.balance+amount
    def commit(self):
        with open(self.filepath,'w') as file:
            file.write(str(self.balance))
class Checking(Account):
    def __init__(self,filepath,fee):
          Account.__init__(self,filepath)
          self.fee=fee
    def transfer(self,amount):
        self.balance=self.balance-amount-self.fee
    
checking=Checking("/balance.txt",100)
checking.deposit(100)
print("After Transfer:",checking.balance)
checking.commit()

#BANK ACCOUNT OF DIFFERENT PEOPLE USING OOP


class Account:
    def __init__(self,filepath):
        self.filepath=filepath#instant variable

        with open(filepath,'r') as file:
            self.balance=int(file.read())
    def withdraw(self,amount):
        self.balance=self.balance-amount
    def deposit(self,amount):
        self.balance=self.balance+amount
    def commit(self):
        with open(self.filepath,'w') as file:
            file.write(str(self.balance))
class Checking(Account):
    """This class generates checking Accounts"""
    type="checking"
    def __init__(self,filepath,fee):
          Account.__init__(self,filepath)
          self.fee=fee
    def transfer(self,amount):
        self.balance=self.balance-amount-self.fee
    
jack_checking=Checking("/jack.txt",100)
jack_checking.deposit(100)
print("After Transfer:",jack_checking.balance)
jack_checking.commit()
print(jack_checking.type)

john_checking=Checking("/john.txt",100)
john_checking.deposit(100)
print("After Transfer:",john_checking.balance)
john_checking.commit()
print(john_checking.type)